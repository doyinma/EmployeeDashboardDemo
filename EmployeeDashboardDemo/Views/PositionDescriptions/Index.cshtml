@model IEnumerable<EmployeeDashboardDemo.Models.PositionDescription>

@{
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
    ViewBag.Title = "Positions";

    int currentPage = ViewBag.CurrentPage ?? 1;
    int totalPages = ViewBag.TotalPages ?? 1;
}

<div class="dashboard">
    <main class="main-content">
        <section id="positions">
            <h2>Positions</h2>

            <div class="button-container">
                <a href="@Url.Action("Add", "PositionDescriptions")" class="btn">Add Position</a>
            </div>

            @if (Request.QueryString["success"] == "1")
            {
                <div class="alert alert-success">Successful</div>
            }

            <div class="responsive-table">
                <table>
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Division</th>
                            <th>Department</th>
                            <th>Description</th>
                            <th>Parking Stall</th>
                            <th>Desk Phone</th>
                            <th>Cell Phone</th>
                            <th>Related Document</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (!Model.Any())
                        {
                            <tr><td colspan="10">No records found</td></tr>
                        }
                        else
                        {
                            foreach (var item in Model)
                            {
                    <tr>
                        <td data-label="ID">@item.Id</td>
                        <td data-label="Name">@item.Name</td>
                        <td data-label="Division">
                            @(item.Division != null ? item.Division.Name : "Not Available")
                        </td>

                        <td data-label="Department">
                            @(item.Department != null ? item.Department.Name : "Not Available")
                        </td>
                        <td data-label="Description">@item.Description</td>
                        <td data-label="Parking Stall">@((item.CheckboxParkingStall) ? "Yes" : "No")</td>
                        <td data-label="Desk Phone">@((item.RadioDeskPhone) ? "Yes" : "No")</td>
                        <td data-label="Cell Phone">@((item.RadioCellPhone) ? "Yes" : "No")</td>
                        <td data-label="Related Document">
                            @if (!string.IsNullOrEmpty(item.RelatedDocument))
                            {
                                <a href="@Url.Content("~/Content/uploads/" + item.RelatedDocument)" target="_blank">View</a>
                            }
                            else
                            {
                                @:No Document
                            }
                        </td>
                        <td data-label="Action">
                            <a href="@Url.Action("Edit", "PositionDescriptions", new { id = item.Id })" class="btn btn-secondary">Edit</a><br /><br />
                            <a href="@Url.Action("Delete", "PositionDescriptions", new { id = item.Id })" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this position?');">Delete</a>
                        </td>
                    </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <div class="pagination">
                @if (currentPage > 1)
                {
                    <a href="@Url.Action("Index", new { page = currentPage - 1 })" class="btn btn-secondary">Previous</a>
                }

                @for (int i = 1; i <= totalPages; i++)
                {
                    <a href="@Url.Action("Index", new { page = i })"
                       class="btn btn-secondary @(i == currentPage ? "active" : "")">@i</a>
                }

                @if (currentPage < totalPages)
                {
                    <a href="@Url.Action("Index", new { page = currentPage + 1 })" class="btn btn-secondary">Next</a>
                }
            </div>
        </section>
    </main>
</div>
